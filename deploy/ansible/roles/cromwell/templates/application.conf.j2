include required(classpath("application"))

system.new-workflow-poll-rate=1

// increase timeout for http requests..... getting meta-data can timeout for large workflows.
akka.http.server.request-timeout=600s

# Maximum number of input file bytes allowed in order to read each type.
# If exceeded a FileSizeTooBig exception will be thrown.
system {
	job-rate-control {
	    jobs = 5
	    per = 1 second
	}
        input-read-limits {
            lines = 1280000
            bool = 7
            int = 19
            float = 50
            string = 1280000
            json = 12800000
            tsv = 12800000
            map = 1280000
            object = 1280000
        }
}

services {
  MetadataService {
    metadata-read-row-number-safety-threshold = 5000000
  }
}

google {

  application-name = "finngen-cromwell"

  auths = [
    {
      name = "application-default"
      scheme = "application_default"
    }
  ]
}

engine {
  filesystems {
     gcs {
       auth = "application-default"
     }
  }
}

call-caching {
  enabled = true
}

backend {
  genomics.location = "{{ dev_cromwell_1_zone }}"
  default = PAPIv2
  providers {
    PAPIv2 {
// life sciences
	  //actor-factory = "cromwell.backend.google.pipelines.v2beta.PipelinesApiLifecycleActorFactory"
	  actor-factory = "cromwell.backend.google.pipelines.v2alpha1.PipelinesApiLifecycleActorFactory"
          config {
            // Google project
            project = "{{dev_cromwell_1_project}}"

            // Base bucket for workflow executions
            root = "gs://dev-cromwell-1/"
	    name-for-call-caching-purposes: PAPI
            genomics-api-queries-per-100-seconds = 1000

            // Polling for completion backs-off gradually for slower-running jobs.
            // This is the maximum polling interval (in seconds):
            maximum-polling-interval = 600
	    request-workers = 3
            genomics {
              // A reference to an auth defined in the `google` stanza at the top.  This auth is used to create
              // Pipelines and manipulate auth JSONs.
              auth = "application-default"
              // Endpoint for APIs, no reason to change this unless directed by Google.
	      endpoint-url="https://genomics.googleapis.com/"
		// life sciences settings
              //endpoint-url = "https://lifesciences.googleapis.com/"
	      //location = "eu-west2"
            }

	    virtual-private-cloud {
              network-label-key = "default-vpc"
              subnetwork-label-key = "default-subnet"
              auth = "application-default"
            }


filesystems {
              gcs {
                // A reference to a potentially different auth for manipulating files via engine functions.
                auth = "application-default"

                caching {
                  # When a cache hit is found, the following duplication strategy will be followed to use the cached outputs
                  # Possible values: "copy", "reference". Defaults to "copy"
                  # "copy": Copy the output files
                  # "reference": DO NOT copy the output files but point to the original output files instead.
                  #              Will still make sure than all the original output files exist and are accessible before
                  #              going forward with the cache hit.
                    duplication-strategy = "reference"
                }
              }
            }

           default-runtime-attributes {
             cpu: 1
             failOnStderr: false
             continueOnReturnCode: 0
             memory: "2 GB"
             bootDiskSizeGb: 10
             # Allowed to be a String, or a list of Strings
             disks: "local-disk 10 SSD"
             noAddress: false
             preemptible: 1
             zones: ["{{ dev_cromwell_1_zone }}"]
           }

         }
    }
  }
}

database {
  db.url = "jdbc:mysql://{{ dev_cromwell_1_mysql }}}/{{ dev_cromwell_1_database }}?useSSL=false&rewriteBatchedStatements=true&cloudSqlInstance={{ dev_cromwell_1_database }}:{{ dev_cromwell_1_zone }}:{{ dev_cromwell_1_database }}"
  db.user = "{{ dev_cromwell_1_username }}"
  db.password = "{{ dev_cromwell_1_password }}"
  db.driver = "com.mysql.cj.jdbc.Driver"
  profile = "slick.jdbc.MySQLProfile$"
}
