apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "pheweb.fullname" . }}-front
  labels:
    app: pheweb
    tier: frontend
    product : pheweb-{{ .Values.pheweb.deployment }}-{{ .Values.pheweb.release }}
    release: {{ .Values.pheweb.release }}
spec:
  serviceName: {{ include "pheweb.fullname" . }}-front
  selector:
    matchLabels:
      app: pheweb
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: pheweb
        tier: frontend
        product : pheweb-{{ .Values.pheweb.deployment }}-{{ .Values.pheweb.release }}
        release: {{ .Values.pheweb.release }}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - pheweb
            topologyKey: kubernetes.io/hostname
      containers:
      - name: pheweb-container
        image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
        env:
        - name: PHEWEB_DIR
          value: {{- if .Values.pheweb.directory }} "{{ .Values.pheweb.directory }}" {{ else }} "{{ .Values.pheweb.mount }}/pheweb/{{ .Values.pheweb.subdomain }}"  {{- end }}
        {{- if .Values.pheweb.cloudSQLCredentialFile }}
        - name: CLOUD_SQL_PROXY_CREDENTIAL_FILE
          value: {{ .Values.pheweb.cloudSQLCredentialFile }}
        {{- end }}
        {{- if .Values.pheweb.cloudSQLProxyInstances }}
        - name: CLOUD_SQL_PROXY_INSTANCES
          value: {{ .Values.pheweb.cloudSQLProxyInstances }}
        {{- end }}


        ports:
        - containerPort: 8080
        {{- if .Values.pheweb.health }}
        readinessProbe:
          initialDelaySeconds: 30
          httpGet:
            path: /health
            port: 8080
        livenessProbe:
          initialDelaySeconds: 30
          periodSeconds: 30
          httpGet:
            path: /health
            port: 8080
        {{- end }}
        volumeMounts:
        - mountPath: "{{ .Values.pheweb.mount }}"
          name: pheweb-nfs
      volumes:
      - name: pheweb-nfs
        persistentVolumeClaim:
          claimName: pvc-{{ include "pheweb.fullname" . }}
          readOnly: false
